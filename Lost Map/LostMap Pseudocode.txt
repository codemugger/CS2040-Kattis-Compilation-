Psuedocode for Lost Map 
By: Anson Phua 
A0216176E 


MAIN IDEA OF ALGO: 


1. Get number of villages. Let it be V. 

2. Create 2 types of data structures. ArrayLists, one of them to store the Edges (edgelist),
the another one to store the resultant edges that exists in the Minimum Spanning Tree after 
running through the Kruskal's algo 

3. For each and every villages and it's corresponding village to village proximity: 
so long as i is not j and i < j (since is bi-directed) 
compute the distance, village i and village j. 
Store the integertriple (which contains the 2 villages a.k.a edges and weight) into your EdgeList. 
// end for 

4. Sort the edgelist. By ascending weight order. Your integertriple class should have already implemented
the comparable so that java knows how to compare

5. create a ufds 

6. int i = 0; initialise a UFDS here with V disjoint sets 

7. for i in range from 0 to the size of edgelist:
	get the i, j and distance from edgelist[i]
	if i and j is in the same set:
		we continue since we cannot create cycle 
	else if they aren't in the same set:
		we call unionset on i and j 
		and we add village i and j into our 2nd list 
// end for 

8. Sort our 2nd list that stores the MST edges

9. print our each and every of the MST edges 

// end procedure  	

